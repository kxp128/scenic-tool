<?xml version="1.0" encoding="UTF-8"?>

<!-- Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出。
	monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数。 -->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<Configuration status="WARN" monitorInterval="30">

	<!--先定义所有的appender -->
	<Appenders>
		<!--这个输出控制台的配置 -->
		<Console name="console" target="SYSTEM_OUT">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
			<ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
			<PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%p] - %l - %m%n" />
		</Console>

		<!--debug 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<!--<RollingRandomAccessFile name="rollingFileDebug"-->
			<!--fileName="/data/listeners/apache-tomcat-8.5.13/log4j2/debug/debug.log" filePattern="/data/listeners/apache-tomcat-8.5.13/log4j2/debug/$${date:yyyy-MM}/debug-%d{MM-dd-yyyy}-%i.log.gz">-->
			<!--<PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%p] - %l - %m%n" />-->
			<!--&lt;!&ndash;只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） &ndash;&gt;-->
			<!--<Filters>-->
				<!--<ThresholdFilter level="debug" onMatch="ACCEPT"-->
					<!--onMismatch="DENY" />-->
			<!--</Filters>-->
			<!--<Policies>-->
				<!--<TimeBasedTriggeringPolicy interval="1" />-->
				<!--<SizeBasedTriggeringPolicy size="100 MB" />-->
			<!--</Policies>-->
			<!--&lt;!&ndash; DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了31 &ndash;&gt;-->
			<!--<DefaultRolloverStrategy max="31" />-->
		<!--</RollingRandomAccessFile>-->
		/data/listeners/apache-tomcat-8.5.13/userlog/listeners-partner.log
		<!--info 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingRandomAccessFile name="rollingFileInfo"
			fileName="/data/listeners/apache-tomcat-8.5.13/userlog/scenic-tool-user.log" filePattern="/data/listeners/apache-tomcat-8.5.13/userlog/scenic-tool-user/$${date:yyyy-MM}/info-%d{MM-dd-yyyy}-%i.log.gz">
			<PatternLayout pattern="[%d{yyyy-MM-dd 'at' HH:mm:ss z}] [%p] - %l - %m%n" />
			<!--只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<Filters>
				<ThresholdFilter level="info" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
			<Policies>
				<TimeBasedTriggeringPolicy interval="1" />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了31 -->
			<DefaultRolloverStrategy max="31" />
		</RollingRandomAccessFile>

		<!--error 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingRandomAccessFile name="rollingFileError"
			fileName="/data/listeners/apache-tomcat-8.5.13/userlog/scenic-tool-user.log" filePattern="/data/listeners/apache-tomcat-8.5.13/userlog/scenic-tool-user/$${date:yyyy-MM}/info-%d{MM-dd-yyyy}-%i.log.gz">
			<PatternLayout pattern="[%d{yyyy-MM-dd 'at' HH:mm:ss z}] [%p] - %l - %m%n" />
			<!--只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<Filters>
				<ThresholdFilter level="error" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
			<Policies>
				<TimeBasedTriggeringPolicy interval="1" />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了31 -->
			<DefaultRolloverStrategy max="31" />
		</RollingRandomAccessFile>

		<!--warn 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingRandomAccessFile name="rollingFileWarn"
			fileName="/data/listeners/apache-tomcat-8.5.13/userlog/scenic-tool-user.log" filePattern="/data/listeners/apache-tomcat-8.5.13/userlog/scenic-tool-user/$${date:yyyy-MM}/info-%d{MM-dd-yyyy}-%i.log.gz">
			<PatternLayout pattern="[%d{yyyy-MM-dd 'at' HH:mm:ss z}] [%p] - %l - %m%n" />
			<!--只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<Filters>
				<ThresholdFilter level="warn" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
			<Policies>
				<TimeBasedTriggeringPolicy interval="1" />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了31 -->
			<DefaultRolloverStrategy max="31" />
		</RollingRandomAccessFile>

		<!--<NoSql name="databaseAppender">-->
			<!--<MongoDb2 databaseName="ddd" collectionName="scenic-tool" server="120.25.228.180" port="10001"-->
						  <!--username="dev" password="qwe123" />-->
		<!--</NoSql>-->

	</Appenders>

	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
	<Loggers>
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息 -->
		<logger name="org.springframework" level="INFO"></logger>
		<logger name="org.mybatis" level="INFO"></logger>
		<logger name="org.mongodb.driver" level="INFO"></logger>
		<!--设置全局输出日记等级-->
		<Root level="debug">
			<AppenderRef ref="console" />
			<!--<AppenderRef ref="rollingFileDebug" />-->
			<AppenderRef ref="rollingFileInfo" />
			<AppenderRef ref="rollingFileError" />
			<AppenderRef ref="rollingFileWarn" />
		</Root>
	</Loggers>

</Configuration>